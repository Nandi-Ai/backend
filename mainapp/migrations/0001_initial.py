# Generated by Django 2.2.1 on 2019-07-24 14:04

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=32, null=True)),
                ('first_login', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cognito_id', models.CharField(blank=True, max_length=255, null=True)),
                ('is_execution', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('readme', models.TextField(blank=True, null=True)),
                ('state', models.CharField(choices=[('public', 'public'), ('private', 'private'), ('archived', 'archived')], max_length=32)),
                ('default_user_permission', models.CharField(choices=[('none', 'none'), ('aggregated', 'aggregated')], max_length=32, null=True)),
                ('bucket', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('glue_database', models.CharField(blank=True, max_length=255, null=True)),
                ('admin_users', models.ManyToManyField(related_name='admin_datasets', to=settings.AUTH_USER_MODEL)),
                ('aggregated_users', models.ManyToManyField(related_name='aggregated_datasets', to=settings.AUTH_USER_MODEL)),
                ('full_access_users', models.ManyToManyField(related_name='full_access_datasets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'datasets',
            },
        ),
        migrations.CreateModel(
            name='Execution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='executions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'executions',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'organizations',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32)),
                ('category', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('datasets', models.ManyToManyField(related_name='studies', to='mainapp.Dataset')),
                ('execution', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='studies', to='mainapp.Execution')),
                ('tags', models.ManyToManyField(related_name='study_tags', to='mainapp.Tag')),
                ('user_created', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='studies_created', to=settings.AUTH_USER_MODEL)),
                ('users', models.ManyToManyField(related_name='studies', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'studies',
            },
        ),
        migrations.AddField(
            model_name='dataset',
            name='tags',
            field=models.ManyToManyField(related_name='dataset_tags', to='mainapp.Tag'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='user_created',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='datasets_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='dataset',
            name='users_requested_aggregated_access',
            field=models.ManyToManyField(related_name='requested_aggregated_access_for_datasets', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='dataset',
            name='users_requested_full_access',
            field=models.ManyToManyField(related_name='requested_full_access_for_datasets', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='users', to='mainapp.Organization'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('dir', models.CharField(blank=True, max_length=255, null=True)),
                ('s3_objects', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=None, null=True)),
                ('type', models.CharField(blank=True, max_length=32, null=True)),
                ('about', models.TextField(blank=True, max_length=2048, null=True)),
                ('columns', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=None, null=True)),
                ('preview', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=None, null=True)),
                ('state', models.CharField(blank=True, max_length=32, null=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='data_sources', to='mainapp.Dataset')),
            ],
            options={
                'db_table': 'data_sources',
                'unique_together': {('name', 'dataset')},
            },
        ),
    ]
